# module that allows us to encrypt texts
from cryptography.fernet import Fernet


def load_key():
    file = open("key.key", "rb")
    key = file.read()
    file.close()
    return key



key = load_key()
fer = Fernet(key)

'''
def write_key():
    key = Fernet.generate_key()

    # create and write the file key.key
    # wb means write in bytes
    # writting the key generated by fernet

    with open("key.key", "wb") as key_file:
        key_file.write(key)
'''




def view():

    with open('passwords.txt', 'r') as f:
        for line in f.readlines():
            data = line.rstrip()
            user, passw = data.split("|")
            print("User:", user, "| Password:", fer.decrypt(passw.encode()).decode())
    

def add():
    name = input('Account Name: ')
    pwd = input('Password: ')

    # create or open a file
    # .txt the file content is in text format 
    # their modes to open the file in eg. a, w, r
    # w - clears a file and starts a new one (overwriting) 
    # a - append mode that writes the content to the end of the existing file or creates a new file if needed
    # r - read only  mode
    # with manually closes the file for you thus best used

    with open('passwords.txt', 'a') as f:
        # f is the name of the file
        # this is going to take the name and password and feed it into the file
        f.write(name + "|" + fer.encrypt(pwd.encode()).decode() + "\n")
         

while True:  
    print("Would you like to add a new password or view existing one ?")
    mode = input("choose view / add or press q to quit: ")
    if mode == "q":
        break

    if mode == "view":
        view()

    elif mode == "add":
        add()

    else:
        print("Invalid mode.")
        continue